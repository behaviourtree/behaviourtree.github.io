import io
import json
from pathlib import Path


def load_tree(name):
    """Parse json-file with into python dict."""
    pkgpath = Path(__file__).resolve().parent.parent
    filepath = pkgpath / "trees" / name

    print("Reading json from:\n", filepath)

    with open(filepath) as file:
        root = json.load(file)

    print("Parsed json as:\n", root)

    return root

def create_file(root, filename=None):
    if filename is None:
        filename = root["name"] + ".py"

    pkgpath = Path(__file__).resolve().parent.parent
    filepath = pkgpath / "build" / filename

    code = generate_code(root)

    with open(filepath, 'w') as file:
        file.write(code)

    return

def generate_code(root):
    """Parse root into a code string."""
    iostream = io.StringIO()

    indent = "    "

    iostream.write("### THIS CODE IS AUTOGENERATED AND SHOULD NOT BE MODIFIED. ###\n")
    iostream.write("\n")
    iostream.write(f"def create_{root['name']}:\n")
    iostream.write(f"{indent}return {root['type']}({root['name']})\n")

    return iostream.getvalue()


# def generate_root_code(root):
#     stringstream = io.StringIO("### THIS CODE IS AUTOGENERATED AND SHOULD NOT BE MODIFIED. ###")

#     # Start building class
#     stringstream.write(f"class {root}")





if __name__ == "__main__":
    tree_name = "first_tree.json"
    root = load_tree(tree_name)
    create_file(root)
